(()=>{"use strict";let e,t,a;class s extends Error{details;constructor(e,t){super(((e,...t)=>{let a=e;return t.length>0&&(a+=` :: ${JSON.stringify(t)}`),a})(e,t)),this.name=e,this.details=t}}let n={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"serwist",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},r=e=>[n.prefix,e,n.suffix].filter(e=>e&&e.length>0).join("-"),i={updateDetails:e=>{var t=t=>{let a=e[t];"string"==typeof a&&(n[t]=a)};for(let e of Object.keys(n))t(e)},getGoogleAnalyticsName:e=>e||r(n.googleAnalytics),getPrecacheName:e=>e||r(n.precache),getRuntimeName:e=>e||r(n.runtime)};class o{promise;resolve;reject;constructor(){this.promise=new Promise((e,t)=>{this.resolve=e,this.reject=t})}}function c(e,t){let a=new URL(e);for(let e of t)a.searchParams.delete(e);return a.href}async function l(e,t,a,s){let n=c(t.url,a);if(t.url===n)return e.match(t,s);let r={...s,ignoreSearch:!0};for(let i of(await e.keys(t,r)))if(n===c(i.url,a))return e.match(i,s)}let h=new Set,u=async()=>{for(let e of h)await e()};function d(e){return new Promise(t=>setTimeout(t,e))}let m="-precache-",g=async(e,t=m)=>{let a=(await self.caches.keys()).filter(a=>a.includes(t)&&a.includes(self.registration.scope)&&a!==e);return await Promise.all(a.map(e=>self.caches.delete(e))),a},f=(e,t)=>{let a=t();return e.waitUntil(a),a},p=(e,t)=>t.some(t=>e instanceof t),w=new WeakMap,y=new WeakMap,_=new WeakMap,b={get(e,t,a){if(e instanceof IDBTransaction){if("done"===t)return w.get(e);if("store"===t)return a.objectStoreNames[1]?void 0:a.objectStore(a.objectStoreNames[0])}return v(e[t])},set:(e,t,a)=>(e[t]=a,!0),has:(e,t)=>e instanceof IDBTransaction&&("done"===t||"store"===t)||t in e};function v(e){if(e instanceof IDBRequest){let t=new Promise((t,a)=>{let s=()=>{e.removeEventListener("success",n),e.removeEventListener("error",r)},n=()=>{t(v(e.result)),s()},r=()=>{a(e.error),s()};e.addEventListener("success",n),e.addEventListener("error",r)});return _.set(t,e),t}if(y.has(e))return y.get(e);let s=function(e){if("function"==typeof e)return(a||(a=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(e)?function(...t){return e.apply(x(this),t),v(this.request)}:function(...t){return v(e.apply(x(this),t))};return(e instanceof IDBTransaction&&function(e){if(w.has(e))return;let t=new Promise((t,a)=>{let s=()=>{e.removeEventListener("complete",n),e.removeEventListener("error",r),e.removeEventListener("abort",r)},n=()=>{t(),s()},r=()=>{a(e.error||new DOMException("AbortError","AbortError")),s()};e.addEventListener("complete",n),e.addEventListener("error",r),e.addEventListener("abort",r)});w.set(e,t)}(e),p(e,t||(t=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])))?new Proxy(e,b):e}(e);return s!==e&&(y.set(e,s),_.set(s,e)),s}let x=e=>_.get(e);function E(e,t,{blocked:a,upgrade:s,blocking:n,terminated:r}={}){let i=indexedDB.open(e,t),o=v(i);return s&&i.addEventListener("upgradeneeded",e=>{s(v(i.result),e.oldVersion,e.newVersion,v(i.transaction),e)}),a&&i.addEventListener("blocked",e=>a(e.oldVersion,e.newVersion,e)),o.then(e=>{r&&e.addEventListener("close",()=>r()),n&&e.addEventListener("versionchange",e=>n(e.oldVersion,e.newVersion,e))}).catch(()=>{}),o}let S=["get","getKey","getAll","getAllKeys","count"],R=["put","add","delete","clear"],q=new Map;function D(e,t){if(!(e instanceof IDBDatabase&&!(t in e)&&"string"==typeof t))return;if(q.get(t))return q.get(t);let a=t.replace(/FromIndex$/,""),s=t!==a,n=R.includes(a);if(!(a in(s?IDBIndex:IDBObjectStore).prototype)||!(n||S.includes(a)))return;let r=async function(e,...t){let r=this.transaction(e,n?"readwrite":"readonly"),i=r.store;return s&&(i=i.index(t.shift())),(await Promise.all([i[a](...t),n&&r.done]))[0]};return q.set(t,r),r}b=(e=>({...e,get:(t,a,s)=>D(t,a)||e.get(t,a,s),has:(t,a)=>!!D(t,a)||e.has(t,a)}))(b);let k=["continue","continuePrimaryKey","advance"],N={},T=new WeakMap,C=new WeakMap,A={get(e,t){if(!k.includes(t))return e[t];let a=N[t];return a||(a=N[t]=function(...e){T.set(this,C.get(this)[t](...e))}),a}};async function*P(...e){let t=this;if(t instanceof IDBCursor||(t=await t.openCursor(...e)),!t)return;let a=new Proxy(t,A);for(C.set(a,t),_.set(a,x(t));t;)yield a,t=await (T.get(a)||t.continue()),T.delete(a)}function I(e,t){return t===Symbol.asyncIterator&&p(e,[IDBIndex,IDBObjectStore,IDBCursor])||"iterate"===t&&p(e,[IDBIndex,IDBObjectStore])}b=(e=>({...e,get:(t,a,s)=>I(t,a)?P:e.get(t,a,s),has:(t,a)=>I(t,a)||e.has(t,a)}))(b);let U=e=>e&&"object"==typeof e?e:{handle:e};class L{handler;match;method;catchHandler;constructor(e,t,a="GET"){this.handler=U(t),this.match=e,this.method=a}setCatchHandler(e){this.catchHandler=U(e)}}class W extends L{_allowlist;_denylist;constructor(e,{allowlist:t=[/./],denylist:a=[]}={}){super(e=>this._match(e),e),this._allowlist=t,this._denylist=a}_match({url:e,request:t}){if(t&&"navigate"!==t.mode)return!1;let a=e.pathname+e.search;for(let e of this._denylist)if(e.test(a))return!1;return!!this._allowlist.some(e=>e.test(a))}}class F extends L{constructor(e,t,a){super(({url:t})=>{let a=e.exec(t.href);if(a)return t.origin!==location.origin&&0!==a.index?void 0:a.slice(1)},t,a)}}let O=async(e,t,a)=>{let s=t.map((e,t)=>({index:t,item:e})),n=async e=>{let t=[];for(;;){let n=s.pop();if(!n)return e(t);let r=await a(n.item);t.push({result:r,index:n.index})}},r=Array.from({length:e},()=>new Promise(n));return(await Promise.all(r)).flat().sort((e,t)=>e.index<t.index?-1:1).map(e=>e.result)};function M(e){return"string"==typeof e?new Request(e):e}class B{event;request;url;params;_cacheKeys={};_strategy;_handlerDeferred;_extendLifetimePromises;_plugins;_pluginStateMap;constructor(e,t){for(let a of(this.event=t.event,this.request=t.request,t.url&&(this.url=t.url,this.params=t.params),this._strategy=e,this._handlerDeferred=new o,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map,this._plugins))this._pluginStateMap.set(a,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){let{event:t}=this,a=M(e),n=await this.getPreloadResponse();if(n)return n;let r=this.hasCallback("fetchDidFail")?a.clone():null;try{for(let e of this.iterateCallbacks("requestWillFetch"))a=await e({request:a.clone(),event:t})}catch(e){if(e instanceof Error)throw new s("plugin-error-request-will-fetch",{thrownErrorMessage:e.message})}let i=a.clone();try{let e;for(let s of(e=await fetch(a,"navigate"===a.mode?void 0:this._strategy.fetchOptions),this.iterateCallbacks("fetchDidSucceed")))e=await s({event:t,request:i,response:e});return e}catch(e){throw r&&await this.runCallbacks("fetchDidFail",{error:e,event:t,originalRequest:r.clone(),request:i.clone()}),e}}async fetchAndCachePut(e){let t=await this.fetch(e),a=t.clone();return this.waitUntil(this.cachePut(e,a)),t}async cacheMatch(e){let t,a=M(e),{cacheName:s,matchOptions:n}=this._strategy,r=await this.getCacheKey(a,"read"),i={...n,cacheName:s};for(let e of(t=await caches.match(r,i),this.iterateCallbacks("cachedResponseWillBeUsed")))t=await e({cacheName:s,matchOptions:n,cachedResponse:t,request:r,event:this.event})||void 0;return t}async cachePut(e,t){let a=M(e);await d(0);let n=await this.getCacheKey(a,"write");if(!t)throw new s("cache-put-with-no-response",{url:new URL(String(n.url),location.href).href.replace(RegExp(`^${location.origin}`),"")});let r=await this._ensureResponseSafeToCache(t);if(!r)return!1;let{cacheName:i,matchOptions:o}=this._strategy,c=await self.caches.open(i),h=this.hasCallback("cacheDidUpdate"),m=h?await l(c,n.clone(),["__WB_REVISION__"],o):null;try{await c.put(n,h?r.clone():r)}catch(e){if(e instanceof Error)throw"QuotaExceededError"===e.name&&await u(),e}for(let e of this.iterateCallbacks("cacheDidUpdate"))await e({cacheName:i,oldResponse:m,newResponse:r.clone(),request:n,event:this.event});return!0}async getCacheKey(e,t){let a=`${e.url} | ${t}`;if(!this._cacheKeys[a]){let s=e;for(let e of this.iterateCallbacks("cacheKeyWillBeUsed"))s=M(await e({mode:t,request:s,event:this.event,params:this.params}));this._cacheKeys[a]=s}return this._cacheKeys[a]}hasCallback(e){for(let t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(let a of this.iterateCallbacks(e))await a(t)}*iterateCallbacks(e){for(let t of this._strategy.plugins)if("function"==typeof t[e]){let a=this._pluginStateMap.get(t),s=s=>{let n={...s,state:a};return t[e](n)};yield s}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async getPreloadResponse(){if(this.event instanceof FetchEvent&&"navigate"===this.event.request.mode&&"preloadResponse"in this.event)try{let e=await this.event.preloadResponse;if(e)return e}catch(e){}}async _ensureResponseSafeToCache(e){let t=e,a=!1;for(let e of this.iterateCallbacks("cacheWillUpdate"))if(t=await e({request:this.request,response:t,event:this.event})||void 0,a=!0,!t)break;return!a&&t&&200!==t.status&&(t=void 0),t}}class K{cacheName;plugins;fetchOptions;matchOptions;constructor(e={}){this.cacheName=i.getRuntimeName(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){let[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});let t=e.event,a="string"==typeof e.request?new Request(e.request):e.request,s=new B(this,e.url?{event:t,request:a,url:e.url,params:e.params}:{event:t,request:a}),n=this._getResponse(s,a,t),r=this._awaitComplete(n,s,a,t);return[n,r]}async _getResponse(e,t,a){let n;await e.runCallbacks("handlerWillStart",{event:a,request:t});try{if(n=await this._handle(t,e),void 0===n||"error"===n.type)throw new s("no-response",{url:t.url})}catch(s){if(s instanceof Error){for(let r of e.iterateCallbacks("handlerDidError"))if(void 0!==(n=await r({error:s,event:a,request:t})))break}if(!n)throw s}for(let s of e.iterateCallbacks("handlerWillRespond"))n=await s({event:a,request:t,response:n});return n}async _awaitComplete(e,t,a,s){let n,r;try{n=await e}catch{}try{await t.runCallbacks("handlerDidRespond",{event:s,request:a,response:n}),await t.doneWaiting()}catch(e){e instanceof Error&&(r=e)}if(await t.runCallbacks("handlerDidComplete",{event:s,request:a,response:n,error:r}),t.destroy(),r)throw r}}let j={cacheWillUpdate:async({response:e})=>200===e.status||0===e.status?e:null};class H extends K{_networkTimeoutSeconds;constructor(e={}){super(e),this.plugins.some(e=>"cacheWillUpdate"in e)||this.plugins.unshift(j),this._networkTimeoutSeconds=e.networkTimeoutSeconds||0}async _handle(e,t){let a,n=[],r=[];if(this._networkTimeoutSeconds){let{id:s,promise:i}=this._getTimeoutPromise({request:e,logs:n,handler:t});a=s,r.push(i)}let i=this._getNetworkPromise({timeoutId:a,request:e,logs:n,handler:t});r.push(i);let o=await t.waitUntil((async()=>await t.waitUntil(Promise.race(r))||await i)());if(!o)throw new s("no-response",{url:e.url});return o}_getTimeoutPromise({request:e,logs:t,handler:a}){let s;return{promise:new Promise(t=>{s=setTimeout(async()=>{t(await a.cacheMatch(e))},1e3*this._networkTimeoutSeconds)}),id:s}}async _getNetworkPromise({timeoutId:e,request:t,logs:a,handler:s}){let n,r;try{r=await s.fetchAndCachePut(t)}catch(e){e instanceof Error&&(n=e)}return e&&clearTimeout(e),(n||!r)&&(r=await s.cacheMatch(t)),r}}class $ extends K{_networkTimeoutSeconds;constructor(e={}){super(e),this._networkTimeoutSeconds=e.networkTimeoutSeconds||0}async _handle(e,t){let a,n;try{let a=[t.fetch(e)];if(this._networkTimeoutSeconds){let e=d(1e3*this._networkTimeoutSeconds);a.push(e)}if(!(n=await Promise.race(a)))throw Error(`Timed out the network response after ${this._networkTimeoutSeconds} seconds.`)}catch(e){e instanceof Error&&(a=e)}if(!n)throw new s("no-response",{url:e.url,error:a});return n}}let G="requests",z="queueName";class Q{_db=null;async addEntry(e){let t=(await this.getDb()).transaction(G,"readwrite",{durability:"relaxed"});await t.store.add(e),await t.done}async getFirstEntryId(){let e=await this.getDb(),t=await e.transaction(G).store.openCursor();return t?.value.id}async getAllEntriesByQueueName(e){let t=await this.getDb();return await t.getAllFromIndex(G,z,IDBKeyRange.only(e))||[]}async getEntryCountByQueueName(e){return(await this.getDb()).countFromIndex(G,z,IDBKeyRange.only(e))}async deleteEntry(e){let t=await this.getDb();await t.delete(G,e)}async getFirstEntryByQueueName(e){return await this.getEndEntryFromIndex(IDBKeyRange.only(e),"next")}async getLastEntryByQueueName(e){return await this.getEndEntryFromIndex(IDBKeyRange.only(e),"prev")}async getEndEntryFromIndex(e,t){let a=await this.getDb(),s=await a.transaction(G).store.index(z).openCursor(e,t);return s?.value}async getDb(){return this._db||(this._db=await E("serwist-background-sync",3,{upgrade:this._upgradeDb})),this._db}_upgradeDb(e,t){t>0&&t<3&&e.objectStoreNames.contains(G)&&e.deleteObjectStore(G),e.createObjectStore(G,{autoIncrement:!0,keyPath:"id"}).createIndex(z,z,{unique:!1})}}class V{_queueName;_queueDb;constructor(e){this._queueName=e,this._queueDb=new Q}async pushEntry(e){delete e.id,e.queueName=this._queueName,await this._queueDb.addEntry(e)}async unshiftEntry(e){let t=await this._queueDb.getFirstEntryId();t?e.id=t-1:delete e.id,e.queueName=this._queueName,await this._queueDb.addEntry(e)}async popEntry(){return this._removeEntry(await this._queueDb.getLastEntryByQueueName(this._queueName))}async shiftEntry(){return this._removeEntry(await this._queueDb.getFirstEntryByQueueName(this._queueName))}async getAll(){return await this._queueDb.getAllEntriesByQueueName(this._queueName)}async size(){return await this._queueDb.getEntryCountByQueueName(this._queueName)}async deleteEntry(e){await this._queueDb.deleteEntry(e)}async _removeEntry(e){return e&&await this.deleteEntry(e.id),e}}let J=["method","referrer","referrerPolicy","mode","credentials","cache","redirect","integrity","keepalive"];class X{_requestData;static async fromRequest(e){let t={url:e.url,headers:{}};for(let a of("GET"!==e.method&&(t.body=await e.clone().arrayBuffer()),e.headers.forEach((e,a)=>{t.headers[a]=e}),J))void 0!==e[a]&&(t[a]=e[a]);return new X(t)}constructor(e){"navigate"===e.mode&&(e.mode="same-origin"),this._requestData=e}toObject(){let e=Object.assign({},this._requestData);return e.headers=Object.assign({},this._requestData.headers),e.body&&(e.body=e.body.slice(0)),e}toRequest(){return new Request(this._requestData.url,this._requestData)}clone(){return new X(this.toObject())}}let Y="serwist-background-sync",Z=new Set,ee=e=>{let t={request:new X(e.requestData).toRequest(),timestamp:e.timestamp};return e.metadata&&(t.metadata=e.metadata),t};class et{_name;_onSync;_maxRetentionTime;_queueStore;_forceSyncFallback;_syncInProgress=!1;_requestsAddedDuringSync=!1;constructor(e,{forceSyncFallback:t,onSync:a,maxRetentionTime:n}={}){if(Z.has(e))throw new s("duplicate-queue-name",{name:e});Z.add(e),this._name=e,this._onSync=a||this.replayRequests,this._maxRetentionTime=n||10080,this._forceSyncFallback=!!t,this._queueStore=new V(this._name),this._addSyncListener()}get name(){return this._name}async pushRequest(e){await this._addRequest(e,"push")}async unshiftRequest(e){await this._addRequest(e,"unshift")}async popRequest(){return this._removeRequest("pop")}async shiftRequest(){return this._removeRequest("shift")}async getAll(){let e=await this._queueStore.getAll(),t=Date.now(),a=[];for(let s of e){let e=60*this._maxRetentionTime*1e3;t-s.timestamp>e?await this._queueStore.deleteEntry(s.id):a.push(ee(s))}return a}async size(){return await this._queueStore.size()}async _addRequest({request:e,metadata:t,timestamp:a=Date.now()},s){let n={requestData:(await X.fromRequest(e.clone())).toObject(),timestamp:a};switch(t&&(n.metadata=t),s){case"push":await this._queueStore.pushEntry(n);break;case"unshift":await this._queueStore.unshiftEntry(n)}this._syncInProgress?this._requestsAddedDuringSync=!0:await this.registerSync()}async _removeRequest(e){let t,a=Date.now();switch(e){case"pop":t=await this._queueStore.popEntry();break;case"shift":t=await this._queueStore.shiftEntry()}if(t){let s=60*this._maxRetentionTime*1e3;return a-t.timestamp>s?this._removeRequest(e):ee(t)}}async replayRequests(){let e;for(;e=await this.shiftRequest();)try{await fetch(e.request.clone())}catch{throw await this.unshiftRequest(e),new s("queue-replay-failed",{name:this._name})}}async registerSync(){if("sync"in self.registration&&!this._forceSyncFallback)try{await self.registration.sync.register(`${Y}:${this._name}`)}catch(e){}}_addSyncListener(){"sync"in self.registration&&!this._forceSyncFallback?self.addEventListener("sync",e=>{if(e.tag===`${Y}:${this._name}`){let t=async()=>{let t;this._syncInProgress=!0;try{await this._onSync({queue:this})}catch(e){if(e instanceof Error)throw e}finally{this._requestsAddedDuringSync&&!(t&&!e.lastChance)&&await this.registerSync(),this._syncInProgress=!1,this._requestsAddedDuringSync=!1}};e.waitUntil(t())}}):this._onSync({queue:this})}static get _queueNames(){return Z}}class ea{_queue;constructor(e,t){this._queue=new et(e,t)}async fetchDidFail({request:e}){await this._queue.pushRequest({request:e})}}let es=async(t,a)=>{let n=null;if(t.url&&(n=new URL(t.url).origin),n!==self.location.origin)throw new s("cross-origin-copy-response",{origin:n});let r=t.clone(),i={headers:new Headers(r.headers),status:r.status,statusText:r.statusText},o=a?a(i):i,c=!function(){if(void 0===e){let t=new Response("");if("body"in t)try{new Response(t.body),e=!0}catch{e=!1}e=!1}return e}()?await r.blob():r.body;return new Response(c,o)};class en extends K{_fallbackToNetwork;static defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e};static copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:e})=>e.redirected?await es(e):e};constructor(e={}){e.cacheName=i.getPrecacheName(e.cacheName),super(e),this._fallbackToNetwork=!1!==e.fallbackToNetwork,this.plugins.push(en.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){let a=await t.getPreloadResponse();if(a)return a;let s=await t.cacheMatch(e);return s||(t.event&&"install"===t.event.type?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,t){let a,n=t.params||{};if(this._fallbackToNetwork){let s=n.integrity,r=e.integrity,i=!r||r===s;a=await t.fetch(new Request(e,{integrity:"no-cors"!==e.mode?r||s:void 0})),s&&i&&"no-cors"!==e.mode&&(this._useDefaultCacheabilityPluginIfNeeded(),await t.cachePut(e,a.clone()))}else throw new s("missing-precache-entry",{cacheName:this.cacheName,url:e.url});return a}async _handleInstall(e,t){this._useDefaultCacheabilityPluginIfNeeded();let a=await t.fetch(e);if(!await t.cachePut(e,a.clone()))throw new s("bad-precaching-response",{url:e.url,status:a.status});return a}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(let[a,s]of this.plugins.entries())s!==en.copyRedirectedCacheableResponsesPlugin&&(s===en.defaultPrecacheCacheabilityPlugin&&(e=a),s.cacheWillUpdate&&t++);0===t?this.plugins.push(en.defaultPrecacheCacheabilityPlugin):t>1&&null!==e&&this.plugins.splice(e,1)}}class er{updatedURLs=[];notUpdatedURLs=[];handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)};cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:a})=>{if("install"===e.type&&t?.originalRequest&&t.originalRequest instanceof Request){let e=t.originalRequest.url;a?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return a}}let ei=e=>{if(!e)throw new s("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){let t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}let{revision:t,url:a}=e;if(!a)throw new s("add-to-cache-list-unexpected-type",{entry:e});if(!t){let e=new URL(a,location.href);return{cacheKey:e.href,url:e.href}}let n=new URL(a,location.href),r=new URL(a,location.href);return n.searchParams.set("__WB_REVISION__",t),{cacheKey:n.href,url:r.href}};class eo extends L{constructor(e,t){super(({request:a})=>{let s=e.getUrlsToPrecacheKeys();for(let n of function*(e,{directoryIndex:t="index.html",ignoreURLParametersMatching:a=[/^utm_/,/^fbclid$/],cleanURLs:s=!0,urlManipulation:n}={}){let r=new URL(e,location.href);r.hash="",yield r.href;let i=((e,t=[])=>{for(let a of[...e.searchParams.keys()])t.some(e=>e.test(a))&&e.searchParams.delete(a);return e})(r,a);if(yield i.href,t&&i.pathname.endsWith("/")){let e=new URL(i.href);e.pathname+=t,yield e.href}if(s){let e=new URL(i.href);e.pathname+=".html",yield e.href}if(n)for(let e of n({url:r}))yield e.href}(a.url,t)){let t=s.get(n);if(t){let a=e.getIntegrityForPrecacheKey(t);return{cacheKey:t,integrity:a}}}},e.precacheStrategy)}}let ec="www.google-analytics.com",el="www.googletagmanager.com",eh=/^\/(\w+\/)?collect/,eu=({serwist:e,cacheName:t,...a})=>{let s=i.getGoogleAnalyticsName(t),n=new ea("serwist-google-analytics",{maxRetentionTime:2880,onSync:(e=>async({queue:t})=>{let a;for(;a=await t.shiftRequest();){let{request:s,timestamp:n}=a,r=new URL(s.url);try{let t="POST"===s.method?new URLSearchParams(await s.clone().text()):r.searchParams,a=n-(Number(t.get("qt"))||0),i=Date.now()-a;if(t.set("qt",String(i)),e.parameterOverrides)for(let a of Object.keys(e.parameterOverrides)){let s=e.parameterOverrides[a];t.set(a,s)}"function"==typeof e.hitFilter&&e.hitFilter.call(null,t),await fetch(new Request(r.origin+r.pathname,{body:t.toString(),method:"POST",mode:"cors",credentials:"omit",headers:{"Content-Type":"text/plain"}}))}catch(e){throw await t.unshiftRequest(a),e}}})(a)});for(let t of[new L(({url:e})=>e.hostname===el&&"/gtm.js"===e.pathname,new H({cacheName:s}),"GET"),new L(({url:e})=>e.hostname===ec&&"/analytics.js"===e.pathname,new H({cacheName:s}),"GET"),new L(({url:e})=>e.hostname===el&&"/gtag/js"===e.pathname,new H({cacheName:s}),"GET"),...(e=>{let t=({url:e})=>e.hostname===ec&&eh.test(e.pathname),a=new $({plugins:[e]});return[new L(t,a,"GET"),new L(t,a,"POST")]})(n)])e.registerRoute(t)};class ed{_fallbackUrls;_serwist;constructor({fallbackUrls:e,serwist:t}){this._fallbackUrls=e,this._serwist=t}async handlerDidError(e){for(let t of this._fallbackUrls)if("string"==typeof t){let e=await this._serwist.matchPrecache(t);if(void 0!==e)return e}else if(t.matcher(e)){let e=await this._serwist.matchPrecache(t.url);if(void 0!==e)return e}}}class em{_precacheController;constructor({precacheController:e}){this._precacheController=e}cacheKeyWillBeUsed=async({request:e,params:t})=>{let a=t?.cacheKey||this._precacheController.getPrecacheKeyForUrl(e.url);return a?new Request(a,{headers:e.headers}):e}}class eg{_urlsToCacheKeys=new Map;_urlsToCacheModes=new Map;_cacheKeysToIntegrities=new Map;_concurrentPrecaching;_precacheStrategy;_routes;_defaultHandlerMap;_catchHandler;constructor({precacheEntries:e,precacheOptions:t,skipWaiting:a=!1,importScripts:s,navigationPreload:n=!1,cacheId:r,clientsClaim:o=!1,runtimeCaching:c,offlineAnalyticsConfig:l,disableDevLogs:h=!1,fallbacks:u}={}){var d,m;let{precacheStrategyOptions:f,precacheRouteOptions:p,precacheMiscOptions:w}=((e,t={})=>{let{cacheName:a,plugins:s=[],fetchOptions:n,matchOptions:r,fallbackToNetwork:o,directoryIndex:c,ignoreURLParametersMatching:l,cleanURLs:h,urlManipulation:u,cleanupOutdatedCaches:d,concurrency:m=10,navigateFallback:g,navigateFallbackAllowlist:f,navigateFallbackDenylist:p}=t??{};return{precacheStrategyOptions:{cacheName:i.getPrecacheName(a),plugins:[...s,new em({precacheController:e})],fetchOptions:n,matchOptions:r,fallbackToNetwork:o},precacheRouteOptions:{directoryIndex:c,ignoreURLParametersMatching:l,cleanURLs:h,urlManipulation:u},precacheMiscOptions:{cleanupOutdatedCaches:d,concurrency:m,navigateFallback:g,navigateFallbackAllowlist:f,navigateFallbackDenylist:p}}})(this,t);if(this._concurrentPrecaching=w.concurrency,this._precacheStrategy=new en(f),this._routes=new Map,this._defaultHandlerMap=new Map,this.handleInstall=this.handleInstall.bind(this),this.handleActivate=this.handleActivate.bind(this),this.handleFetch=this.handleFetch.bind(this),this.handleCache=this.handleCache.bind(this),s&&s.length>0&&self.importScripts(...s),n&&self.registration?.navigationPreload&&self.addEventListener("activate",e=>{e.waitUntil(self.registration.navigationPreload.enable().then(()=>{}))}),void 0!==r&&(d={prefix:r},i.updateDetails(d)),a?self.skipWaiting():self.addEventListener("message",e=>{e.data&&"SKIP_WAITING"===e.data.type&&self.skipWaiting()}),o&&self.addEventListener("activate",()=>self.clients.claim()),e&&e.length>0&&this.addToPrecacheList(e),w.cleanupOutdatedCaches&&(m=f.cacheName,self.addEventListener("activate",e=>{e.waitUntil(g(i.getPrecacheName(m)).then(e=>{}))})),this.registerRoute(new eo(this,p)),w.navigateFallback&&this.registerRoute(new W(this.createHandlerBoundToUrl(w.navigateFallback),{allowlist:w.navigateFallbackAllowlist,denylist:w.navigateFallbackDenylist})),void 0!==l&&("boolean"==typeof l?l&&eu({serwist:this}):eu({...l,serwist:this})),void 0!==c){if(void 0!==u){let e=new ed({fallbackUrls:u.entries,serwist:this});c.forEach(t=>{t.handler instanceof K&&!t.handler.plugins.some(e=>"handlerDidError"in e)&&t.handler.plugins.push(e)})}for(let e of c)this.registerCapture(e.matcher,e.handler,e.method)}h&&(self.__WB_DISABLE_DEV_LOGS=!0)}get precacheStrategy(){return this._precacheStrategy}get routes(){return this._routes}addEventListeners(){self.addEventListener("install",this.handleInstall),self.addEventListener("activate",this.handleActivate),self.addEventListener("fetch",this.handleFetch),self.addEventListener("message",this.handleCache)}addToPrecacheList(e){let t=[];for(let a of e){"string"==typeof a?t.push(a):a&&!a.integrity&&void 0===a.revision&&t.push(a.url);let{cacheKey:e,url:n}=ei(a),r="string"!=typeof a&&a.revision?"reload":"default";if(this._urlsToCacheKeys.has(n)&&this._urlsToCacheKeys.get(n)!==e)throw new s("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(n),secondEntry:e});if("string"!=typeof a&&a.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==a.integrity)throw new s("add-to-cache-list-conflicting-integrities",{url:n});this._cacheKeysToIntegrities.set(e,a.integrity)}this._urlsToCacheKeys.set(n,e),this._urlsToCacheModes.set(n,r),t.length>0&&console.warn(`Serwist is precaching URLs without revision info: ${t.join(", ")}
This is generally NOT safe. Learn more at https://bit.ly/wb-precache`)}}handleInstall(e){return f(e,async()=>{let t=new er;this.precacheStrategy.plugins.push(t),await O(this._concurrentPrecaching,Array.from(this._urlsToCacheKeys.entries()),async([t,a])=>{let s=this._cacheKeysToIntegrities.get(a),n=this._urlsToCacheModes.get(t),r=new Request(t,{integrity:s,cache:n,credentials:"same-origin"});await Promise.all(this.precacheStrategy.handleAll({event:e,request:r,url:new URL(r.url),params:{cacheKey:a}}))});let{updatedURLs:a,notUpdatedURLs:s}=t;return{updatedURLs:a,notUpdatedURLs:s}})}handleActivate(e){return f(e,async()=>{let e=await self.caches.open(this.precacheStrategy.cacheName),t=await e.keys(),a=new Set(this._urlsToCacheKeys.values()),s=[];for(let n of t)a.has(n.url)||(await e.delete(n),s.push(n.url));return{deletedCacheRequests:s}})}handleFetch(e){let{request:t}=e,a=this.handleRequest({request:t,event:e});a&&e.respondWith(a)}handleCache(e){if(e.data&&"CACHE_URLS"===e.data.type){let{payload:t}=e.data,a=Promise.all(t.urlsToCache.map(t=>{let a;return a="string"==typeof t?new Request(t):new Request(...t),this.handleRequest({request:a,event:e})}));e.waitUntil(a),e.ports?.[0]&&a.then(()=>e.ports[0].postMessage(!0))}}setDefaultHandler(e,t="GET"){this._defaultHandlerMap.set(t,U(e))}setCatchHandler(e){this._catchHandler=U(e)}registerCapture(e,t,a){let n=((e,t,a)=>{if("string"==typeof e){let s=new URL(e,location.href);return new L(({url:e})=>e.href===s.href,t,a)}if(e instanceof RegExp)return new F(e,t,a);if("function"==typeof e)return new L(e,t,a);if(e instanceof L)return e;throw new s("unsupported-route-type",{moduleName:"serwist",funcName:"parseRoute",paramName:"capture"})})(e,t,a);return this.registerRoute(n),n}registerRoute(e){this._routes.has(e.method)||this._routes.set(e.method,[]),this._routes.get(e.method).push(e)}unregisterRoute(e){if(!this._routes.has(e.method))throw new s("unregister-route-but-not-found-with-method",{method:e.method});let t=this._routes.get(e.method).indexOf(e);if(t>-1)this._routes.get(e.method).splice(t,1);else throw new s("unregister-route-route-not-registered")}getUrlsToPrecacheKeys(){return this._urlsToCacheKeys}getPrecachedUrls(){return[...this._urlsToCacheKeys.keys()]}getPrecacheKeyForUrl(e){let t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForPrecacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){let t=e instanceof Request?e.url:e,a=this.getPrecacheKeyForUrl(t);if(a)return(await self.caches.open(this.precacheStrategy.cacheName)).match(a)}createHandlerBoundToUrl(e){let t=this.getPrecacheKeyForUrl(e);if(!t)throw new s("non-precached-url",{url:e});return a=>(a.request=new Request(e),a.params={cacheKey:t,...a.params},this.precacheStrategy.handle(a))}handleRequest({request:e,event:t}){let a,s=new URL(e.url,location.href);if(!s.protocol.startsWith("http"))return;let n=s.origin===location.origin,{params:r,route:i}=this.findMatchingRoute({event:t,request:e,sameOrigin:n,url:s}),o=i?.handler,c=e.method;if(!o&&this._defaultHandlerMap.has(c)&&(o=this._defaultHandlerMap.get(c)),!o)return;try{a=o.handle({url:s,request:e,event:t,params:r})}catch(e){a=Promise.reject(e)}let l=i?.catchHandler;return a instanceof Promise&&(this._catchHandler||l)&&(a=a.catch(async a=>{if(l)try{return await l.handle({url:s,request:e,event:t,params:r})}catch(e){e instanceof Error&&(a=e)}if(this._catchHandler)return this._catchHandler.handle({url:s,request:e,event:t});throw a})),a}findMatchingRoute({url:e,sameOrigin:t,request:a,event:s}){for(let n of this._routes.get(a.method)||[]){let r,i=n.match({url:e,sameOrigin:t,request:a,event:s});if(i)return Array.isArray(r=i)&&0===r.length||i.constructor===Object&&0===Object.keys(i).length?r=void 0:"boolean"==typeof i&&(r=void 0),{route:n,params:r}}return{}}}"undefined"!=typeof navigator&&/^((?!chrome|android).)*safari/i.test(navigator.userAgent);let ef="cache-entries",ep=e=>{let t=new URL(e,location.href);return t.hash="",t.href};class ew{_cacheName;_db=null;constructor(e){this._cacheName=e}_getId(e){return`${this._cacheName}|${ep(e)}`}_upgradeDb(e){let t=e.createObjectStore(ef,{keyPath:"id"});t.createIndex("cacheName","cacheName",{unique:!1}),t.createIndex("timestamp","timestamp",{unique:!1})}_upgradeDbAndDeleteOldDbs(e){this._upgradeDb(e),this._cacheName&&function(e,{blocked:t}={}){let a=indexedDB.deleteDatabase(e);t&&a.addEventListener("blocked",e=>t(e.oldVersion,e)),v(a).then(()=>void 0)}(this._cacheName)}async setTimestamp(e,t){e=ep(e);let a={id:this._getId(e),cacheName:this._cacheName,url:e,timestamp:t},s=(await this.getDb()).transaction(ef,"readwrite",{durability:"relaxed"});await s.store.put(a),await s.done}async getTimestamp(e){let t=await this.getDb(),a=await t.get(ef,this._getId(e));return a?.timestamp}async expireEntries(e,t){let a=await this.getDb(),s=await a.transaction(ef,"readwrite").store.index("timestamp").openCursor(null,"prev"),n=[],r=0;for(;s;){let a=s.value;a.cacheName===this._cacheName&&(e&&a.timestamp<e||t&&r>=t?(s.delete(),n.push(a.url)):r++),s=await s.continue()}return n}async getDb(){return this._db||(this._db=await E("serwist-expiration",1,{upgrade:this._upgradeDbAndDeleteOldDbs.bind(this)})),this._db}}class ey{_isRunning=!1;_rerunRequested=!1;_maxEntries;_maxAgeSeconds;_matchOptions;_cacheName;_timestampModel;constructor(e,t={}){this._maxEntries=t.maxEntries,this._maxAgeSeconds=t.maxAgeSeconds,this._matchOptions=t.matchOptions,this._cacheName=e,this._timestampModel=new ew(e)}async expireEntries(){if(this._isRunning){this._rerunRequested=!0;return}this._isRunning=!0;let e=this._maxAgeSeconds?Date.now()-1e3*this._maxAgeSeconds:0,t=await this._timestampModel.expireEntries(e,this._maxEntries),a=await self.caches.open(this._cacheName);for(let e of t)await a.delete(e,this._matchOptions);this._isRunning=!1,this._rerunRequested&&(this._rerunRequested=!1,this.expireEntries())}async updateTimestamp(e){await this._timestampModel.setTimestamp(e,Date.now())}async isURLExpired(e){if(!this._maxAgeSeconds)return!1;let t=await this._timestampModel.getTimestamp(e),a=Date.now()-1e3*this._maxAgeSeconds;return void 0===t||t<a}async delete(){this._rerunRequested=!1,await this._timestampModel.expireEntries(1/0)}}class e_{_config;_cacheExpirations;constructor(e={}){var t;this._config=e,this._cacheExpirations=new Map,this._config.maxAgeFrom||(this._config.maxAgeFrom="last-fetched"),this._config.purgeOnQuotaError&&(t=()=>this.deleteCacheAndMetadata(),h.add(t))}_getCacheExpiration(e){if(e===i.getRuntimeName())throw new s("expire-custom-caches-only");let t=this._cacheExpirations.get(e);return t||(t=new ey(e,this._config),this._cacheExpirations.set(e,t)),t}cachedResponseWillBeUsed({event:e,cacheName:t,request:a,cachedResponse:s}){if(!s)return null;let n=this._isResponseDateFresh(s),r=this._getCacheExpiration(t),i="last-used"===this._config.maxAgeFrom,o=(async()=>{i&&await r.updateTimestamp(a.url),await r.expireEntries()})();try{e.waitUntil(o)}catch{}return n?s:null}_isResponseDateFresh(e){if("last-used"===this._config.maxAgeFrom)return!0;let t=Date.now();if(!this._config.maxAgeSeconds)return!0;let a=this._getDateHeaderTimestamp(e);return null===a||a>=t-1e3*this._config.maxAgeSeconds}_getDateHeaderTimestamp(e){if(!e.headers.has("date"))return null;let t=new Date(e.headers.get("date")).getTime();return Number.isNaN(t)?null:t}async cacheDidUpdate({cacheName:e,request:t}){let a=this._getCacheExpiration(e);await a.updateTimestamp(t.url),await a.expireEntries()}async deleteCacheAndMetadata(){for(let[e,t]of this._cacheExpirations)await self.caches.delete(e),await t.delete();this._cacheExpirations=new Map}}let eb=async(e,t)=>{try{if(206===t.status)return t;let a=e.headers.get("range");if(!a)throw new s("no-range-header");let n=(e=>{let t=e.trim().toLowerCase();if(!t.startsWith("bytes="))throw new s("unit-must-be-bytes",{normalizedRangeHeader:t});if(t.includes(","))throw new s("single-range-only",{normalizedRangeHeader:t});let a=/(\d*)-(\d*)/.exec(t);if(!a||!(a[1]||a[2]))throw new s("invalid-range-values",{normalizedRangeHeader:t});return{start:""===a[1]?void 0:Number(a[1]),end:""===a[2]?void 0:Number(a[2])}})(a),r=await t.blob(),i=((e,t,a)=>{let n,r,i=e.size;if(a&&a>i||t&&t<0)throw new s("range-not-satisfiable",{size:i,end:a,start:t});return void 0!==t&&void 0!==a?(n=t,r=a+1):void 0!==t&&void 0===a?(n=t,r=i):void 0!==a&&void 0===t&&(n=i-a,r=i),{start:n,end:r}})(r,n.start,n.end),o=r.slice(i.start,i.end),c=o.size,l=new Response(o,{status:206,statusText:"Partial Content",headers:t.headers});return l.headers.set("Content-Length",String(c)),l.headers.set("Content-Range",`bytes ${i.start}-${i.end-1}/${r.size}`),l}catch(e){return new Response("",{status:416,statusText:"Range Not Satisfiable"})}};class ev{cachedResponseWillBeUsed=async({request:e,cachedResponse:t})=>t&&e.headers.has("range")?await eb(e,t):t}class ex extends K{async _handle(e,t){let a,n=await t.cacheMatch(e);if(!n)try{n=await t.fetchAndCachePut(e)}catch(e){e instanceof Error&&(a=e)}if(!n)throw new s("no-response",{url:e.url,error:a});return n}}class eE extends K{constructor(e={}){super(e),this.plugins.some(e=>"cacheWillUpdate"in e)||this.plugins.unshift(j)}async _handle(e,t){let a,n=t.fetchAndCachePut(e).catch(()=>{});t.waitUntil(n);let r=await t.cacheMatch(e);if(r);else try{r=await n}catch(e){e instanceof Error&&(a=e)}if(!r)throw new s("no-response",{url:e.url,error:a});return r}}let eS={rscPrefetch:"pages-rsc-prefetch",rsc:"pages-rsc",html:"pages"},eR=[{matcher:/^https:\/\/fonts\.(?:gstatic)\.com\/.*/i,handler:new ex({cacheName:"google-fonts-webfonts",plugins:[new e_({maxEntries:4,maxAgeSeconds:31536e3,maxAgeFrom:"last-used"})]})},{matcher:/^https:\/\/fonts\.(?:googleapis)\.com\/.*/i,handler:new eE({cacheName:"google-fonts-stylesheets",plugins:[new e_({maxEntries:4,maxAgeSeconds:604800,maxAgeFrom:"last-used"})]})},{matcher:/\.(?:eot|otf|ttc|ttf|woff|woff2|font.css)$/i,handler:new eE({cacheName:"static-font-assets",plugins:[new e_({maxEntries:4,maxAgeSeconds:604800,maxAgeFrom:"last-used"})]})},{matcher:/\.(?:jpg|jpeg|gif|png|svg|ico|webp)$/i,handler:new eE({cacheName:"static-image-assets",plugins:[new e_({maxEntries:64,maxAgeSeconds:2592e3,maxAgeFrom:"last-used"})]})},{matcher:/\/_next\/static.+\.js$/i,handler:new ex({cacheName:"next-static-js-assets",plugins:[new e_({maxEntries:64,maxAgeSeconds:86400,maxAgeFrom:"last-used"})]})},{matcher:/\/_next\/image\?url=.+$/i,handler:new eE({cacheName:"next-image",plugins:[new e_({maxEntries:64,maxAgeSeconds:86400,maxAgeFrom:"last-used"})]})},{matcher:/\.(?:mp3|wav|ogg)$/i,handler:new ex({cacheName:"static-audio-assets",plugins:[new e_({maxEntries:32,maxAgeSeconds:86400,maxAgeFrom:"last-used"}),new ev]})},{matcher:/\.(?:mp4|webm)$/i,handler:new ex({cacheName:"static-video-assets",plugins:[new e_({maxEntries:32,maxAgeSeconds:86400,maxAgeFrom:"last-used"}),new ev]})},{matcher:/\.(?:js)$/i,handler:new eE({cacheName:"static-js-assets",plugins:[new e_({maxEntries:48,maxAgeSeconds:86400,maxAgeFrom:"last-used"})]})},{matcher:/\.(?:css|less)$/i,handler:new eE({cacheName:"static-style-assets",plugins:[new e_({maxEntries:32,maxAgeSeconds:86400,maxAgeFrom:"last-used"})]})},{matcher:/\/_next\/data\/.+\/.+\.json$/i,handler:new H({cacheName:"next-data",plugins:[new e_({maxEntries:32,maxAgeSeconds:86400,maxAgeFrom:"last-used"})]})},{matcher:/\.(?:json|xml|csv)$/i,handler:new H({cacheName:"static-data-assets",plugins:[new e_({maxEntries:32,maxAgeSeconds:86400,maxAgeFrom:"last-used"})]})},{matcher:/\/api\/auth\/.*/,handler:new $({networkTimeoutSeconds:10})},{matcher:({sameOrigin:e,url:{pathname:t}})=>e&&t.startsWith("/api/"),method:"GET",handler:new H({cacheName:"apis",plugins:[new e_({maxEntries:16,maxAgeSeconds:86400,maxAgeFrom:"last-used"})],networkTimeoutSeconds:10})},{matcher:({request:e,url:{pathname:t},sameOrigin:a})=>"1"===e.headers.get("RSC")&&"1"===e.headers.get("Next-Router-Prefetch")&&a&&!t.startsWith("/api/"),handler:new H({cacheName:eS.rscPrefetch,plugins:[new e_({maxEntries:32,maxAgeSeconds:86400})]})},{matcher:({request:e,url:{pathname:t},sameOrigin:a})=>"1"===e.headers.get("RSC")&&a&&!t.startsWith("/api/"),handler:new H({cacheName:eS.rsc,plugins:[new e_({maxEntries:32,maxAgeSeconds:86400})]})},{matcher:({request:e,url:{pathname:t},sameOrigin:a})=>e.headers.get("Content-Type")?.includes("text/html")&&a&&!t.startsWith("/api/"),handler:new H({cacheName:eS.html,plugins:[new e_({maxEntries:32,maxAgeSeconds:86400})]})},{matcher:({url:{pathname:e},sameOrigin:t})=>t&&!e.startsWith("/api/"),handler:new H({cacheName:"others",plugins:[new e_({maxEntries:32,maxAgeSeconds:86400})]})},{matcher:({sameOrigin:e})=>!e,handler:new H({cacheName:"cross-origin",plugins:[new e_({maxEntries:32,maxAgeSeconds:3600})],networkTimeoutSeconds:10})},{matcher:/.*/i,method:"GET",handler:new $}],eq={isAuthenticated:!1,userId:null,sessionExpiry:null,lastAuthCheck:null},eD=["/dashboard","/create","/api"];async function ek(e){let t=new URL(e.url);if(!(eq.isAuthenticated&&eq.userId&&(!(eq.sessionExpiry&&Date.now()>=eq.sessionExpiry)||(console.log("Service Worker: Session expired"),0)))){if(console.log("Service Worker: Invalid session for protected route:",t.pathname),t.pathname.startsWith("/api/"))return new Response(JSON.stringify({error:"Unauthorized",message:"Authentication required",code:"SESSION_EXPIRED"}),{status:401,headers:{"Content-Type":"application/json"}});if("document"===e.destination){let e=new URL("/sign-in",t.origin);return e.searchParams.set("redirectTo",t.pathname),Response.redirect(e.toString(),302)}}try{let t=await fetch(e);return(401===t.status||403===t.status)&&await eT(),t}catch(t){if(console.error("Service Worker: Protected route fetch failed:",t),"document"===e.destination)return new Response('<!DOCTYPE html>\n    <html lang="en">\n    <head>\n      <title>TigerDorm - Authentication Required</title>\n      <meta name="viewport" content="width=device-width, initial-scale=1">\n      <meta name="theme-color" content="#4f46e5">\n      <style>\n        body { \n          font-family: system-ui, -apple-system, sans-serif; \n          background: #111827; \n          color: white; \n          display: flex; \n          align-items: center; \n          justify-content: center; \n          min-height: 100vh; \n          margin: 0;\n          text-align: center;\n          padding: 2rem;\n        }\n        .auth-container { max-width: 400px; }\n        .icon { font-size: 4rem; margin-bottom: 1rem; }\n        h1 { color: #f59e0b; margin-bottom: 1rem; font-size: 2rem; }\n        p { color: #9ca3af; line-height: 1.6; margin-bottom: 1rem; }\n        .auth-btn {\n          background: #4f46e5;\n          color: white;\n          border: none;\n          padding: 0.75rem 1.5rem;\n          border-radius: 0.5rem;\n          cursor: pointer;\n          margin: 0.5rem;\n          font-size: 1rem;\n          font-weight: 600;\n          transition: background 0.2s;\n          text-decoration: none;\n          display: inline-block;\n        }\n        .auth-btn:hover { background: #4338ca; }\n        .status-indicator {\n          display: inline-block;\n          width: 8px;\n          height: 8px;\n          background: #f59e0b;\n          border-radius: 50%;\n          margin-right: 8px;\n        }\n      </style>\n    </head>\n    <body>\n      <div class="auth-container">\n        <div class="icon">\uD83D\uDD10</div>\n        <h1>Authentication Required</h1>\n        <p><span class="status-indicator"></span>Session expired or invalid</p>\n        <p>You need to be signed in to access this content.</p>\n        <p>Please connect to the internet and sign in to continue.</p>\n        <a href="/sign-in" class="auth-btn">Sign In</a>\n        <button class="auth-btn" onclick="window.location.reload()">Retry</button>\n      </div>\n      <script>\n        // Auto-reload when connection is restored\n        window.addEventListener(\'online\', () => {\n          setTimeout(() => window.location.reload(), 1000);\n        });\n      <\/script>\n    </body>\n    </html>',{headers:{"Content-Type":"text/html","Cache-Control":"no-cache"}});return new Response(JSON.stringify({error:"Service Unavailable",message:"Unable to connect to server",code:"NETWORK_ERROR"}),{status:503,headers:{"Content-Type":"application/json"}})}}async function eN(e){e&&e.token&&(eq.sessionExpiry=e.expiry||Date.now()+36e5,console.log("Service Worker: Token refreshed, new expiry:",new Date(eq.sessionExpiry)))}async function eT(){console.log("Service Worker: Session expired, clearing auth state"),eq.isAuthenticated=!1,eq.userId=null,eq.sessionExpiry=null,await eC(),(await self.clients.matchAll()).forEach(e=>{e.postMessage({type:"SESSION_EXPIRED_IN_SW",timestamp:Date.now()})})}async function eC(){try{let e=(await caches.keys()).filter(e=>e.includes("api")||e.includes("auth"));await Promise.all(e.map(e=>caches.delete(e))),console.log("Service Worker: Cleared auth caches:",e)}catch(e){console.error("Service Worker: Failed to clear auth cache:",e)}}async function eA(){try{console.log("Service Worker: Syncing auth state"),(await self.clients.matchAll()).forEach(e=>{e.postMessage({type:"REQUEST_AUTH_REFRESH",timestamp:Date.now()})})}catch(e){console.error("Service Worker: Auth sync failed",e)}}async function eP(){try{console.log("Service Worker: Syncing status updates")}catch(e){console.error("Service Worker: Sync failed",e)}}new eg({precacheEntries:[{'revision':'b5e65857189b6b20cfc2e5281d152243','url':'/_next/static/Wcvo-WhpCOe6-nue_cj88/_buildManifest.js'},{'revision':'b6652df95db52feb4daf4eca35380933','url':'/_next/static/Wcvo-WhpCOe6-nue_cj88/_ssgManifest.js'},{'revision':null,'url':'/_next/static/chunks/124-047e48f9615ea29b.js'},{'revision':null,'url':'/_next/static/chunks/155-e7c37f72b681535e.js'},{'revision':null,'url':'/_next/static/chunks/192-6297127a9b24fc03.js'},{'revision':null,'url':'/_next/static/chunks/291-c57a273b6f913115.js'},{'revision':null,'url':'/_next/static/chunks/2b2f2692-34dd99d1777e4892.js'},{'revision':null,'url':'/_next/static/chunks/65.b67310c5583d2407.js'},{'revision':null,'url':'/_next/static/chunks/69-71362f3770d7faa1.js'},{'revision':null,'url':'/_next/static/chunks/706.700f518d884ba457.js'},{'revision':null,'url':'/_next/static/chunks/app/_not-found/page-652358497af650ca.js'},{'revision':null,'url':'/_next/static/chunks/app/api/location-update/route-bd65bc90fe5d1db0.js'},{'revision':null,'url':'/_next/static/chunks/app/api/webhooks/clerk/route-bd65bc90fe5d1db0.js'},{'revision':null,'url':'/_next/static/chunks/app/dashboard/%5BgeofenceId%5D/page-fcfa2eeb8ec347a8.js'},{'revision':null,'url':'/_next/static/chunks/app/dashboard/page-070b99c6b324f7c8.js'},{'revision':null,'url':'/_next/static/chunks/app/join/page-dcc3edd229dab7f9.js'},{'revision':null,'url':'/_next/static/chunks/app/layout-8a220fab37c6b771.js'},{'revision':null,'url':'/_next/static/chunks/app/page-1864850affcb43b9.js'},{'revision':null,'url':'/_next/static/chunks/app/sign-in/%5B%5B...sign-in%5D%5D/page-bd65bc90fe5d1db0.js'},{'revision':null,'url':'/_next/static/chunks/framework-7a4e299ac44f23d9.js'},{'revision':null,'url':'/_next/static/chunks/main-app-53baefd166c9f1b7.js'},{'revision':null,'url':'/_next/static/chunks/main-f40715f2f429cd04.js'},{'revision':null,'url':'/_next/static/chunks/pages/_app-bd94181f70437150.js'},{'revision':null,'url':'/_next/static/chunks/pages/_error-66d0d678f6172ae0.js'},{'revision':'846118c33b2c0e922d7b3a7676f81f6f','url':'/_next/static/chunks/polyfills-42372ed130431b0a.js'},{'revision':null,'url':'/_next/static/chunks/webpack-ae5bf8256cac220a.js'},{'revision':null,'url':'/_next/static/css/42bb7c7ce184c3b0.css'},{'revision':'ef6cefb32024deac234e82f932a95cbd','url':'/_next/static/media/569ce4b8f30dc480-s.p.woff2'},{'revision':'a0761690ccf4441ace5cec893b82d4ab','url':'/_next/static/media/747892c23ea88013-s.woff2'},{'revision':'cc728f6c0adb04da0dfcb0fc436a8ae5','url':'/_next/static/media/8d697b304b401681-s.woff2'},{'revision':'da83d5f06d825c5ae65b7cca706cb312','url':'/_next/static/media/93f479601ee12b01-s.p.woff2'},{'revision':'7b7c0ef93df188a852344fc272fc096b','url':'/_next/static/media/9610d9e46709d722-s.woff2'},{'revision':'8ea4f719af3312a055caf09f34c89a77','url':'/_next/static/media/ba015fad6dcf6784-s.woff2'},{'revision':'306b2c2c4a7316dde43012fa65a3c0fe','url':'/icon-192x192.png'},{'revision':'b5f4445c3a0ad6716b2208002e0a03e0','url':'/icon-256x256.png'},{'revision':'4505457fc8c6a575b9c8f4ac687b9586','url':'/icon-384x384.png'},{'revision':'b12eacd637d7e57a59750f7b4221b479','url':'/icon-512x512.png'},{'revision':'a543243d08fe2876e3d14a09df43340e','url':'/manifest.json'},{'revision':'1666c6f1e8ae3b302483082700dd1822','url':'/swe-worker-ab00d3c7d2d59769.js'}],skipWaiting:!0,clientsClaim:!0,navigationPreload:!0,disableDevLogs:!1,runtimeCaching:eR}).addEventListeners(),self.addEventListener("fetch",e=>{if("GET"!==e.request.method)return;let t=new URL(e.request.url);if(!t.hostname.includes("supabase.co")){var a;if("chrome-extension:"!==t.protocol&&"moz-extension:"!==t.protocol&&(a=t.pathname,eD.some(e=>a.startsWith(e))))return void e.respondWith(ek(e.request))}}),self.addEventListener("message",e=>{console.log("Service Worker: Message received",e.data);let{type:t,data:a}=e.data;switch(t){case"AUTH_STATE_UPDATE":var s;s=a,console.log("Service Worker: Auth state updated",eq={...eq,...s,lastAuthCheck:Date.now()});break;case"TOKEN_REFRESH":eN(a);break;case"SESSION_EXPIRED":eT();break;case"CLEAR_AUTH_CACHE":eC();break;default:console.log("Service Worker: Unknown message type:",t)}}),self.addEventListener("sync",e=>{console.log("Service Worker: Background sync triggered"),"status-update"===e.tag?e.waitUntil(eP()):"auth-refresh"===e.tag&&e.waitUntil(eA())}),self.addEventListener("push",e=>{if(console.log("Service Worker: Push received"),!e.data)return;let t=e.data.json(),a={body:t.body,icon:"/icon-192x192.png?v=3",badge:"/icon-192x192.png?v=3",vibrate:[200,100,200],data:t.data||{},actions:[{action:"view",title:"View Status",icon:"/icon-192x192.png?v=3"}]};e.waitUntil(self.registration.showNotification(t.title||"TigerDorm",a))}),self.addEventListener("notificationclick",e=>{console.log("Service Worker: Notification clicked"),e.notification.close(),e.waitUntil(self.clients.openWindow("/"))})})();